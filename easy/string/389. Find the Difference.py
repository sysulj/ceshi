"""
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

"""

"""
异或：两个字符串只有一个不同
题目：一个整型数组里除了一个数字之外，其它的数字都出现了两次。
        请写程序找出这个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)
扩展：一个整型数组里除了两个数字之外，其他的数字都出现了两次。
    请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)
    参考url： https://blog.csdn.net/u011826264/article/details/39269101
"""
"""
异或
"""
class Solution:
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        a = s + t
        res = 0
        for i in a:
            res = res ^ ord(i)  # ord 函数返回ascii对应数值
        return chr(res)

# 异或 最佳代码
class Solution:
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        import operator
        from functools import reduce
        return chr(reduce(operator.xor,map(ord,(s+t))))


"""
    计数
"""
class Solution:
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        from collections import Counter
        return list(Counter(t)-Counter(s))[0]


class Solution:
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        return [i for i in t if i not in s or s.count(i) != t.count(i) ][0]